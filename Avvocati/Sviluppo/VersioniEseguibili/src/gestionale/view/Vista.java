/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * Vista.java
 *
 * Created on 26-nov-2011, 0.04.21
 */

package gestionale.view;

import gestionale.Constants;
import gestionale.control.AzioneAggiungiCliente;
import gestionale.control.AzioneEsci;
import gestionale.control.AzioneInfo;
import gestionale.control.AzioneSalva;
import gestionale.control.Controllo;
import gestionale.model.Modello;
import java.util.HashMap;
import java.util.Map;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;

/**
 *
 * @author Nicola
 */
public class Vista extends javax.swing.JFrame {

// Imposta LookAndFeel
//    static {
//        selezionaLookAndFeel();
//        JFrame.setDefaultLookAndFeelDecorated(true);
//    }
//
//    private static void selezionaLookAndFeel() {
//        try {
//            String lookAndFeelOcean = javax.swing.UIManager.getCrossPlatformLookAndFeelClassName();
//            String lookAndFeelWindows = javax.swing.UIManager.getSystemLookAndFeelClassName();
//            String lookAndFeelMotif = "com.sun.java.swing.plaf.motif.MotifLookAndFeel";
//            String lookAndFeelGtk = "com.sun.java.swing.plaf.gtk.GTKLookAndFeel"; // attenzione: si verifica un'eccezione
//            javax.swing.UIManager.setLookAndFeel(lookAndFeelOcean);
//            javax.swing.UIManager.setLookAndFeel(lookAndFeelWindows);
//            javax.swing.UIManager.setLookAndFeel(lookAndFeelMotif);
//        } catch (Exception e) {
//            System.out.println("Eccezione nella selezione del look and feel: " + e);
//        }
//    }
//

    private Controllo controllo;
    private Modello modello;
    private int stato;
    private Map mappaSottoViste = new HashMap();
    private Log logger = LogFactory.getLog(this.getClass());
    private AzioneAggiungiCliente aac;
    private AzioneSalva as;

    /** Creates new form Vista */
    public Vista(Controllo controllo, Modello modello) {
        this.controllo = controllo;
        this.modello = modello;
        initComponents();
        inizializzaSottoviste();
        postInizializza();
    }

    public Object getSottoVista(String key) {
        return this.mappaSottoViste.get(key);
    }

    public void putSottoVista(String key, Object o) {
        this.mappaSottoViste.put(key, o);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        jMenu1.setText("File");

        jMenuItem1.setText("jMenuItem1");
        jMenu1.add(jMenuItem1);

        jMenuItem3.setText("Nuovo Cliente");
        jMenu1.add(jMenuItem3);

        jMenuItem5.setText("jMenuItem5");
        jMenu1.add(jMenuItem5);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        jMenuItem2.setText("jMenuItem2");
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @return the controllo
     */
    public Controllo getControllo() {
        return controllo;
    }

    /**
     * @return the modello
     */
    public Modello getModello() {
        return modello;
    }

    private void inizializzaSottoviste() {
        this.mappaSottoViste.put(Constants.FINESTRA_NUOVO_CLIENTE, new FinestraNuovoCliente(this));
        this.mappaSottoViste.put(Constants.PANNELLO_PRINCIPALE, new PannelloPrincipale(this));
        this.mappaSottoViste.put(Constants.PANNELLO_FASCICOLI, new PannelloFascicoli(this));
        this.mappaSottoViste.put(Constants.FINESTRA_CAUSA, new FinestraCausa(this));
        this.mappaSottoViste.put(Constants.FINESTRA_AGGIUNGI_FASCICOLO_CLIENTE_ESISTENTE, new FinestraAggiungiFascicoloClienteEsistente(this));
        this.mappaSottoViste.put(Constants.POPUP_MENU, new PopupMenu(this));
    }

    private void postInizializza() {
       
        PannelloPrincipale pp = (PannelloPrincipale) this.getSottoVista(Constants.PANNELLO_PRINCIPALE);
        this.add(pp);
        AzioneEsci ae = (AzioneEsci) this.controllo.getAzione(Constants.AZIONE_ESCI);
        this.jMenuItem1.setAction(ae);
        AzioneInfo ai = (AzioneInfo) this.controllo.getAzione(Constants.AZIONE_INFO);
        this.jMenuItem2.setAction(ai);
        aac = (AzioneAggiungiCliente) this.controllo.getAzione(Constants.AZIONE_AGGIUNGI_CLIENTE);
        this.jMenuItem3.setAction(aac);
        this.jMenuItem3.setText("Nuovo Cliente");
        as = (AzioneSalva) this.controllo.getAzione(Constants.AZIONE_SALVA);
        this.jMenuItem5.setAction(as);
        verificaValidita(pp);
        
        //Aggiornare la versione del titolo
        this.setTitle("Software Gestionale v0.2-alpha-build14");
        this.setVisible(true);
        this.pack();
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
    }

    public void visualizzaFascicoli() {
        PannelloPrincipale pp = (PannelloPrincipale) this.getSottoVista(Constants.PANNELLO_PRINCIPALE);
        this.remove(pp);
        PannelloFascicoli pf = (PannelloFascicoli) this.getSottoVista(Constants.PANNELLO_FASCICOLI);
        this.add(pf);
        pf.repaint();
        this.repaint();
    }

    public void nascondiFascicoli() {
        PannelloFascicoli pf = (PannelloFascicoli) this.getSottoVista(Constants.PANNELLO_FASCICOLI);
        this.remove(pf);
        PannelloPrincipale pp = (PannelloPrincipale) this.getSottoVista(Constants.PANNELLO_PRINCIPALE);
        this.add(pp);
        pp.repaint();
        this.repaint();
    }

    public void schermoErrore(String string) {
        JOptionPane.showMessageDialog(this, string, "Errore", JOptionPane.ERROR_MESSAGE);
    }

    public void schermoInfo(String string) {
        JOptionPane.showMessageDialog(this, string, "Informazioni", JOptionPane.INFORMATION_MESSAGE);
    }

    public void setInizializzaStato(int stato) {
        this.stato = stato;
    }

    public int getInizializzaStato() {
        return this.stato;
    }

    public int getMaxDimVert() {
        return Vista.MAXIMIZED_VERT;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem5;
    // End of variables declaration//GEN-END:variables

    private void verificaValidita(PannelloPrincipale pp) {

        if (this.controllo.getValidita() == 0) {
            schermoErrore("Attenzione la versione di prova e' scaduta, acquista una licenza");

            disabilitaTutto(pp);
        } else {
            schermoInfo("Attenzione hai ancora " + this.controllo.getValidita() + " avvii di prova");
        }
    }

    private void disabilitaTutto(PannelloPrincipale pp) {
        aac.setEnabled(false);
        as.setEnabled(false);
        pp.disablitaTutto();
    }

}
